scalar String
scalar File

type Schema {
  file: File!
}

union DataSource = EthereumContractDataSource

type EthereumContractDataSource {
  kind: String!
  name: String!
  network: String
  source: EthereumContractSource!
  mapping: EthereumContractMapping!
  templates: [EthereumContractDataSourceTemplate!]
}

type EthereumContractSource {
  address: String
  abi: String!
}

type EthereumContractMapping {
  kind: String!
  apiVersion: String!
  language: String!
  file: File!
  entities: [String!]!
  abis: [EthereumContractAbi!]!
  eventHandlers: [EthereumContractEventHandlers]!
}

type EthereumContractAbi {
  name: String!
  file: File!
}

type EthereumContractEventHandlers {
  event: String!
  topic0: String
  handler: String!
}

type SubgraphManifest {
  specVersion: String!
  schema: Schema!
  description: String
  repository: String
  dataSources: [DataSource!]!
}

type EthereumContractDataSourceTemplate {
  kind: String!
  name: String!
  network: String
  source: EthereumContractSourceTemplate!
  mapping: EthereumContractMapping!
}

type EthereumContractSourceTemplate {
  abi: String!
}
